#!/bin/bash
# vim: set ft=sh

set -e

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

source /opt/git-resource/common.sh
source $(dirname $0)/common.sh

working_dir=$1

if [ -z "$working_dir" ]; then
  echo "usage: $0 <path/to/source>"
  exit 1
fi

payload=$(mktemp $TMPDIR/git-resource-request.XXXXXX)

cat > $payload <&0

commit_message=$(jq -r '.params.commit_message // ""' < $payload)
git_config_payload=$(jq -r '.source.git_config // []' < $payload)
repository=$(jq -r '.params.repository // ""' < $payload)

load_pubkey $payload
configure_https_tunnel $payload
configure_git_ssl_verification $payload
configure_credentials $payload
configure_git_global "${git_config_payload}"


if [ -z "$repository" ]; then
  echo "invalid payload (missing repository)"
  exit 1
fi

# the repository is already checked out here:
cd "$working_dir/$repository"
branch=$(<.git/git-branch-heads-resource/branch)

git commit -m "$commit_message" -a
git push origin HEAD:$branch


version_ref="$(git rev-parse HEAD | jq -R .)"


## output the version suitable for the implicit get step
jq -n "{
  version: {
    changed: \"$branch\",
    \"$branch\": $version_ref
  },
  metadata: $(git_metadata)
}" >&3
